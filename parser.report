Terminals unused in grammar

    INPUT
    CLEAR
    TYPEOF
    RANDINT
    EQ
    NEQ
    LEQ
    GEQ
    LT
    GT
    COMMA
    AND
    OR
    NOT
    UNKNOWN


Grammar

    0 $accept: program $end

    1 program: program statement
    2        | ε

    3 statement: declaration end
    4          | print_stmt end
    5          | if_stmt
    6          | repeat_stmt
    7          | return_stmt end
    8          | BREAK end
    9          | CONTINUE end

   10 declaration: type IDENTIFIER ASSIGN expression

   11 type: INT
   12     | FLOAT
   13     | STRING
   14     | BOOL

   15 print_stmt: PRINT LPAREN expression RPAREN

   16 if_stmt: IF LPAREN expression RPAREN block
   17        | IF LPAREN expression RPAREN block ELSE block

   18 repeat_stmt: REPEAT LPAREN expression RPAREN block

   19 return_stmt: RETURN expression

   20 block: LBRACE program RBRACE

   21 expression: INTEGER_LITERAL
   22           | FLOAT_LITERAL
   23           | STRING_LITERAL
   24           | CHAR_LITERAL
   25           | TRUE
   26           | FALSE
   27           | IDENTIFIER
   28           | expression PLUS expression
   29           | expression MINUS expression
   30           | expression STAR expression
   31           | expression SLASH expression
   32           | LPAREN expression RPAREN

   33 end: SEMICOLON
   34    | NEWLINE


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTEGER_LITERAL <ival> (258) 21
    FLOAT_LITERAL <fval> (259) 22
    STRING_LITERAL <sval> (260) 23
    IDENTIFIER <sval> (261) 10 27
    CHAR_LITERAL <cval> (262) 24
    TRUE <bval> (263) 25
    FALSE <bval> (264) 26
    INT (265) 11
    FLOAT (266) 12
    STRING (267) 13
    BOOL (268) 14
    PRINT (269) 15
    INPUT (270)
    CLEAR (271)
    TYPEOF (272)
    RANDINT (273)
    IF (274) 16 17
    ELSE (275) 17
    REPEAT (276) 18
    RETURN (277) 19
    BREAK (278) 8
    CONTINUE (279) 9
    PLUS (280) 28
    MINUS (281) 29
    STAR (282) 30
    SLASH (283) 31
    ASSIGN (284) 10
    EQ (285)
    NEQ (286)
    LEQ (287)
    GEQ (288)
    LT (289)
    GT (290)
    LPAREN (291) 15 16 17 18 32
    RPAREN (292) 15 16 17 18 32
    LBRACE (293) 20
    RBRACE (294) 20
    SEMICOLON (295) 33
    COMMA (296)
    AND (297)
    OR (298)
    NOT (299)
    NEWLINE (300) 34
    UNKNOWN (301)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    program (48)
        on left: 1 2
        on right: 0 1 20
    statement <node> (49)
        on left: 3 4 5 6 7 8 9
        on right: 1
    declaration <node> (50)
        on left: 10
        on right: 3
    type <sval> (51)
        on left: 11 12 13 14
        on right: 10
    print_stmt <node> (52)
        on left: 15
        on right: 4
    if_stmt <node> (53)
        on left: 16 17
        on right: 5
    repeat_stmt <node> (54)
        on left: 18
        on right: 6
    return_stmt <node> (55)
        on left: 19
        on right: 7
    block <block> (56)
        on left: 20
        on right: 16 17 18
    expression <node> (57)
        on left: 21 22 23 24 25 26 27 28 29 30 31 32
        on right: 10 15 16 17 18 19 28 29 30 31 32
    end (58)
        on left: 33 34
        on right: 3 4 7 8 9


State 0

    0 $accept: • program $end
    1 program: • program statement
    2        | ε •

    $default  reduce using rule 2 (program)

    program  go to state 1


State 1

    0 $accept: program • $end
    1 program: program • statement
    3 statement: • declaration end
    4          | • print_stmt end
    5          | • if_stmt
    6          | • repeat_stmt
    7          | • return_stmt end
    8          | • BREAK end
    9          | • CONTINUE end
   10 declaration: • type IDENTIFIER ASSIGN expression
   11 type: • INT
   12     | • FLOAT
   13     | • STRING
   14     | • BOOL
   15 print_stmt: • PRINT LPAREN expression RPAREN
   16 if_stmt: • IF LPAREN expression RPAREN block
   17        | • IF LPAREN expression RPAREN block ELSE block
   18 repeat_stmt: • REPEAT LPAREN expression RPAREN block
   19 return_stmt: • RETURN expression

    $end      shift, and go to state 2
    INT       shift, and go to state 3
    FLOAT     shift, and go to state 4
    STRING    shift, and go to state 5
    BOOL      shift, and go to state 6
    PRINT     shift, and go to state 7
    IF        shift, and go to state 8
    REPEAT    shift, and go to state 9
    RETURN    shift, and go to state 10
    BREAK     shift, and go to state 11
    CONTINUE  shift, and go to state 12

    statement    go to state 13
    declaration  go to state 14
    type         go to state 15
    print_stmt   go to state 16
    if_stmt      go to state 17
    repeat_stmt  go to state 18
    return_stmt  go to state 19


State 2

    0 $accept: program $end •

    $default  accept


State 3

   11 type: INT •

    $default  reduce using rule 11 (type)


State 4

   12 type: FLOAT •

    $default  reduce using rule 12 (type)


State 5

   13 type: STRING •

    $default  reduce using rule 13 (type)


State 6

   14 type: BOOL •

    $default  reduce using rule 14 (type)


State 7

   15 print_stmt: PRINT • LPAREN expression RPAREN

    LPAREN  shift, and go to state 20


State 8

   16 if_stmt: IF • LPAREN expression RPAREN block
   17        | IF • LPAREN expression RPAREN block ELSE block

    LPAREN  shift, and go to state 21


State 9

   18 repeat_stmt: REPEAT • LPAREN expression RPAREN block

    LPAREN  shift, and go to state 22


State 10

   19 return_stmt: RETURN • expression
   21 expression: • INTEGER_LITERAL
   22           | • FLOAT_LITERAL
   23           | • STRING_LITERAL
   24           | • CHAR_LITERAL
   25           | • TRUE
   26           | • FALSE
   27           | • IDENTIFIER
   28           | • expression PLUS expression
   29           | • expression MINUS expression
   30           | • expression STAR expression
   31           | • expression SLASH expression
   32           | • LPAREN expression RPAREN

    INTEGER_LITERAL  shift, and go to state 23
    FLOAT_LITERAL    shift, and go to state 24
    STRING_LITERAL   shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    TRUE             shift, and go to state 28
    FALSE            shift, and go to state 29
    LPAREN           shift, and go to state 30

    expression  go to state 31


State 11

    8 statement: BREAK • end
   33 end: • SEMICOLON
   34    | • NEWLINE

    SEMICOLON  shift, and go to state 32
    NEWLINE    shift, and go to state 33

    end  go to state 34


State 12

    9 statement: CONTINUE • end
   33 end: • SEMICOLON
   34    | • NEWLINE

    SEMICOLON  shift, and go to state 32
    NEWLINE    shift, and go to state 33

    end  go to state 35


State 13

    1 program: program statement •

    $default  reduce using rule 1 (program)


State 14

    3 statement: declaration • end
   33 end: • SEMICOLON
   34    | • NEWLINE

    SEMICOLON  shift, and go to state 32
    NEWLINE    shift, and go to state 33

    end  go to state 36


State 15

   10 declaration: type • IDENTIFIER ASSIGN expression

    IDENTIFIER  shift, and go to state 37


State 16

    4 statement: print_stmt • end
   33 end: • SEMICOLON
   34    | • NEWLINE

    SEMICOLON  shift, and go to state 32
    NEWLINE    shift, and go to state 33

    end  go to state 38


State 17

    5 statement: if_stmt •

    $default  reduce using rule 5 (statement)


State 18

    6 statement: repeat_stmt •

    $default  reduce using rule 6 (statement)


State 19

    7 statement: return_stmt • end
   33 end: • SEMICOLON
   34    | • NEWLINE

    SEMICOLON  shift, and go to state 32
    NEWLINE    shift, and go to state 33

    end  go to state 39


State 20

   15 print_stmt: PRINT LPAREN • expression RPAREN
   21 expression: • INTEGER_LITERAL
   22           | • FLOAT_LITERAL
   23           | • STRING_LITERAL
   24           | • CHAR_LITERAL
   25           | • TRUE
   26           | • FALSE
   27           | • IDENTIFIER
   28           | • expression PLUS expression
   29           | • expression MINUS expression
   30           | • expression STAR expression
   31           | • expression SLASH expression
   32           | • LPAREN expression RPAREN

    INTEGER_LITERAL  shift, and go to state 23
    FLOAT_LITERAL    shift, and go to state 24
    STRING_LITERAL   shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    TRUE             shift, and go to state 28
    FALSE            shift, and go to state 29
    LPAREN           shift, and go to state 30

    expression  go to state 40


State 21

   16 if_stmt: IF LPAREN • expression RPAREN block
   17        | IF LPAREN • expression RPAREN block ELSE block
   21 expression: • INTEGER_LITERAL
   22           | • FLOAT_LITERAL
   23           | • STRING_LITERAL
   24           | • CHAR_LITERAL
   25           | • TRUE
   26           | • FALSE
   27           | • IDENTIFIER
   28           | • expression PLUS expression
   29           | • expression MINUS expression
   30           | • expression STAR expression
   31           | • expression SLASH expression
   32           | • LPAREN expression RPAREN

    INTEGER_LITERAL  shift, and go to state 23
    FLOAT_LITERAL    shift, and go to state 24
    STRING_LITERAL   shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    TRUE             shift, and go to state 28
    FALSE            shift, and go to state 29
    LPAREN           shift, and go to state 30

    expression  go to state 41


State 22

   18 repeat_stmt: REPEAT LPAREN • expression RPAREN block
   21 expression: • INTEGER_LITERAL
   22           | • FLOAT_LITERAL
   23           | • STRING_LITERAL
   24           | • CHAR_LITERAL
   25           | • TRUE
   26           | • FALSE
   27           | • IDENTIFIER
   28           | • expression PLUS expression
   29           | • expression MINUS expression
   30           | • expression STAR expression
   31           | • expression SLASH expression
   32           | • LPAREN expression RPAREN

    INTEGER_LITERAL  shift, and go to state 23
    FLOAT_LITERAL    shift, and go to state 24
    STRING_LITERAL   shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    TRUE             shift, and go to state 28
    FALSE            shift, and go to state 29
    LPAREN           shift, and go to state 30

    expression  go to state 42


State 23

   21 expression: INTEGER_LITERAL •

    $default  reduce using rule 21 (expression)


State 24

   22 expression: FLOAT_LITERAL •

    $default  reduce using rule 22 (expression)


State 25

   23 expression: STRING_LITERAL •

    $default  reduce using rule 23 (expression)


State 26

   27 expression: IDENTIFIER •

    $default  reduce using rule 27 (expression)


State 27

   24 expression: CHAR_LITERAL •

    $default  reduce using rule 24 (expression)


State 28

   25 expression: TRUE •

    $default  reduce using rule 25 (expression)


State 29

   26 expression: FALSE •

    $default  reduce using rule 26 (expression)


State 30

   21 expression: • INTEGER_LITERAL
   22           | • FLOAT_LITERAL
   23           | • STRING_LITERAL
   24           | • CHAR_LITERAL
   25           | • TRUE
   26           | • FALSE
   27           | • IDENTIFIER
   28           | • expression PLUS expression
   29           | • expression MINUS expression
   30           | • expression STAR expression
   31           | • expression SLASH expression
   32           | • LPAREN expression RPAREN
   32           | LPAREN • expression RPAREN

    INTEGER_LITERAL  shift, and go to state 23
    FLOAT_LITERAL    shift, and go to state 24
    STRING_LITERAL   shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    TRUE             shift, and go to state 28
    FALSE            shift, and go to state 29
    LPAREN           shift, and go to state 30

    expression  go to state 43


State 31

   19 return_stmt: RETURN expression •  [SEMICOLON, NEWLINE]
   28 expression: expression • PLUS expression
   29           | expression • MINUS expression
   30           | expression • STAR expression
   31           | expression • SLASH expression

    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45
    STAR   shift, and go to state 46
    SLASH  shift, and go to state 47

    $default  reduce using rule 19 (return_stmt)


State 32

   33 end: SEMICOLON •

    $default  reduce using rule 33 (end)


State 33

   34 end: NEWLINE •

    $default  reduce using rule 34 (end)


State 34

    8 statement: BREAK end •

    $default  reduce using rule 8 (statement)


State 35

    9 statement: CONTINUE end •

    $default  reduce using rule 9 (statement)


State 36

    3 statement: declaration end •

    $default  reduce using rule 3 (statement)


State 37

   10 declaration: type IDENTIFIER • ASSIGN expression

    ASSIGN  shift, and go to state 48


State 38

    4 statement: print_stmt end •

    $default  reduce using rule 4 (statement)


State 39

    7 statement: return_stmt end •

    $default  reduce using rule 7 (statement)


State 40

   15 print_stmt: PRINT LPAREN expression • RPAREN
   28 expression: expression • PLUS expression
   29           | expression • MINUS expression
   30           | expression • STAR expression
   31           | expression • SLASH expression

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    STAR    shift, and go to state 46
    SLASH   shift, and go to state 47
    RPAREN  shift, and go to state 49


State 41

   16 if_stmt: IF LPAREN expression • RPAREN block
   17        | IF LPAREN expression • RPAREN block ELSE block
   28 expression: expression • PLUS expression
   29           | expression • MINUS expression
   30           | expression • STAR expression
   31           | expression • SLASH expression

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    STAR    shift, and go to state 46
    SLASH   shift, and go to state 47
    RPAREN  shift, and go to state 50


State 42

   18 repeat_stmt: REPEAT LPAREN expression • RPAREN block
   28 expression: expression • PLUS expression
   29           | expression • MINUS expression
   30           | expression • STAR expression
   31           | expression • SLASH expression

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    STAR    shift, and go to state 46
    SLASH   shift, and go to state 47
    RPAREN  shift, and go to state 51


State 43

   28 expression: expression • PLUS expression
   29           | expression • MINUS expression
   30           | expression • STAR expression
   31           | expression • SLASH expression
   32           | LPAREN expression • RPAREN

    PLUS    shift, and go to state 44
    MINUS   shift, and go to state 45
    STAR    shift, and go to state 46
    SLASH   shift, and go to state 47
    RPAREN  shift, and go to state 52


State 44

   21 expression: • INTEGER_LITERAL
   22           | • FLOAT_LITERAL
   23           | • STRING_LITERAL
   24           | • CHAR_LITERAL
   25           | • TRUE
   26           | • FALSE
   27           | • IDENTIFIER
   28           | • expression PLUS expression
   28           | expression PLUS • expression
   29           | • expression MINUS expression
   30           | • expression STAR expression
   31           | • expression SLASH expression
   32           | • LPAREN expression RPAREN

    INTEGER_LITERAL  shift, and go to state 23
    FLOAT_LITERAL    shift, and go to state 24
    STRING_LITERAL   shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    TRUE             shift, and go to state 28
    FALSE            shift, and go to state 29
    LPAREN           shift, and go to state 30

    expression  go to state 53


State 45

   21 expression: • INTEGER_LITERAL
   22           | • FLOAT_LITERAL
   23           | • STRING_LITERAL
   24           | • CHAR_LITERAL
   25           | • TRUE
   26           | • FALSE
   27           | • IDENTIFIER
   28           | • expression PLUS expression
   29           | • expression MINUS expression
   29           | expression MINUS • expression
   30           | • expression STAR expression
   31           | • expression SLASH expression
   32           | • LPAREN expression RPAREN

    INTEGER_LITERAL  shift, and go to state 23
    FLOAT_LITERAL    shift, and go to state 24
    STRING_LITERAL   shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    TRUE             shift, and go to state 28
    FALSE            shift, and go to state 29
    LPAREN           shift, and go to state 30

    expression  go to state 54


State 46

   21 expression: • INTEGER_LITERAL
   22           | • FLOAT_LITERAL
   23           | • STRING_LITERAL
   24           | • CHAR_LITERAL
   25           | • TRUE
   26           | • FALSE
   27           | • IDENTIFIER
   28           | • expression PLUS expression
   29           | • expression MINUS expression
   30           | • expression STAR expression
   30           | expression STAR • expression
   31           | • expression SLASH expression
   32           | • LPAREN expression RPAREN

    INTEGER_LITERAL  shift, and go to state 23
    FLOAT_LITERAL    shift, and go to state 24
    STRING_LITERAL   shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    TRUE             shift, and go to state 28
    FALSE            shift, and go to state 29
    LPAREN           shift, and go to state 30

    expression  go to state 55


State 47

   21 expression: • INTEGER_LITERAL
   22           | • FLOAT_LITERAL
   23           | • STRING_LITERAL
   24           | • CHAR_LITERAL
   25           | • TRUE
   26           | • FALSE
   27           | • IDENTIFIER
   28           | • expression PLUS expression
   29           | • expression MINUS expression
   30           | • expression STAR expression
   31           | • expression SLASH expression
   31           | expression SLASH • expression
   32           | • LPAREN expression RPAREN

    INTEGER_LITERAL  shift, and go to state 23
    FLOAT_LITERAL    shift, and go to state 24
    STRING_LITERAL   shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    TRUE             shift, and go to state 28
    FALSE            shift, and go to state 29
    LPAREN           shift, and go to state 30

    expression  go to state 56


State 48

   10 declaration: type IDENTIFIER ASSIGN • expression
   21 expression: • INTEGER_LITERAL
   22           | • FLOAT_LITERAL
   23           | • STRING_LITERAL
   24           | • CHAR_LITERAL
   25           | • TRUE
   26           | • FALSE
   27           | • IDENTIFIER
   28           | • expression PLUS expression
   29           | • expression MINUS expression
   30           | • expression STAR expression
   31           | • expression SLASH expression
   32           | • LPAREN expression RPAREN

    INTEGER_LITERAL  shift, and go to state 23
    FLOAT_LITERAL    shift, and go to state 24
    STRING_LITERAL   shift, and go to state 25
    IDENTIFIER       shift, and go to state 26
    CHAR_LITERAL     shift, and go to state 27
    TRUE             shift, and go to state 28
    FALSE            shift, and go to state 29
    LPAREN           shift, and go to state 30

    expression  go to state 57


State 49

   15 print_stmt: PRINT LPAREN expression RPAREN •

    $default  reduce using rule 15 (print_stmt)


State 50

   16 if_stmt: IF LPAREN expression RPAREN • block
   17        | IF LPAREN expression RPAREN • block ELSE block
   20 block: • LBRACE program RBRACE

    LBRACE  shift, and go to state 58

    block  go to state 59


State 51

   18 repeat_stmt: REPEAT LPAREN expression RPAREN • block
   20 block: • LBRACE program RBRACE

    LBRACE  shift, and go to state 58

    block  go to state 60


State 52

   32 expression: LPAREN expression RPAREN •

    $default  reduce using rule 32 (expression)


State 53

   28 expression: expression • PLUS expression
   28           | expression PLUS expression •  [PLUS, MINUS, RPAREN, SEMICOLON, NEWLINE]
   29           | expression • MINUS expression
   30           | expression • STAR expression
   31           | expression • SLASH expression

    STAR   shift, and go to state 46
    SLASH  shift, and go to state 47

    $default  reduce using rule 28 (expression)

    Conflict between rule 28 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 28 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 28 and token STAR resolved as shift (PLUS < STAR).
    Conflict between rule 28 and token SLASH resolved as shift (PLUS < SLASH).


State 54

   28 expression: expression • PLUS expression
   29           | expression • MINUS expression
   29           | expression MINUS expression •  [PLUS, MINUS, RPAREN, SEMICOLON, NEWLINE]
   30           | expression • STAR expression
   31           | expression • SLASH expression

    STAR   shift, and go to state 46
    SLASH  shift, and go to state 47

    $default  reduce using rule 29 (expression)

    Conflict between rule 29 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 29 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 29 and token STAR resolved as shift (MINUS < STAR).
    Conflict between rule 29 and token SLASH resolved as shift (MINUS < SLASH).


State 55

   28 expression: expression • PLUS expression
   29           | expression • MINUS expression
   30           | expression • STAR expression
   30           | expression STAR expression •  [PLUS, MINUS, STAR, SLASH, RPAREN, SEMICOLON, NEWLINE]
   31           | expression • SLASH expression

    $default  reduce using rule 30 (expression)

    Conflict between rule 30 and token PLUS resolved as reduce (PLUS < STAR).
    Conflict between rule 30 and token MINUS resolved as reduce (MINUS < STAR).
    Conflict between rule 30 and token STAR resolved as reduce (%left STAR).
    Conflict between rule 30 and token SLASH resolved as reduce (%left SLASH).


State 56

   28 expression: expression • PLUS expression
   29           | expression • MINUS expression
   30           | expression • STAR expression
   31           | expression • SLASH expression
   31           | expression SLASH expression •  [PLUS, MINUS, STAR, SLASH, RPAREN, SEMICOLON, NEWLINE]

    $default  reduce using rule 31 (expression)

    Conflict between rule 31 and token PLUS resolved as reduce (PLUS < SLASH).
    Conflict between rule 31 and token MINUS resolved as reduce (MINUS < SLASH).
    Conflict between rule 31 and token STAR resolved as reduce (%left STAR).
    Conflict between rule 31 and token SLASH resolved as reduce (%left SLASH).


State 57

   10 declaration: type IDENTIFIER ASSIGN expression •  [SEMICOLON, NEWLINE]
   28 expression: expression • PLUS expression
   29           | expression • MINUS expression
   30           | expression • STAR expression
   31           | expression • SLASH expression

    PLUS   shift, and go to state 44
    MINUS  shift, and go to state 45
    STAR   shift, and go to state 46
    SLASH  shift, and go to state 47

    $default  reduce using rule 10 (declaration)


State 58

    1 program: • program statement
    2        | ε •
   20 block: LBRACE • program RBRACE

    $default  reduce using rule 2 (program)

    program  go to state 61


State 59

   16 if_stmt: IF LPAREN expression RPAREN block •  [$end, INT, FLOAT, STRING, BOOL, PRINT, IF, REPEAT, RETURN, BREAK, CONTINUE, RBRACE]
   17        | IF LPAREN expression RPAREN block • ELSE block

    ELSE  shift, and go to state 62

    $default  reduce using rule 16 (if_stmt)


State 60

   18 repeat_stmt: REPEAT LPAREN expression RPAREN block •

    $default  reduce using rule 18 (repeat_stmt)


State 61

    1 program: program • statement
    3 statement: • declaration end
    4          | • print_stmt end
    5          | • if_stmt
    6          | • repeat_stmt
    7          | • return_stmt end
    8          | • BREAK end
    9          | • CONTINUE end
   10 declaration: • type IDENTIFIER ASSIGN expression
   11 type: • INT
   12     | • FLOAT
   13     | • STRING
   14     | • BOOL
   15 print_stmt: • PRINT LPAREN expression RPAREN
   16 if_stmt: • IF LPAREN expression RPAREN block
   17        | • IF LPAREN expression RPAREN block ELSE block
   18 repeat_stmt: • REPEAT LPAREN expression RPAREN block
   19 return_stmt: • RETURN expression
   20 block: LBRACE program • RBRACE

    INT       shift, and go to state 3
    FLOAT     shift, and go to state 4
    STRING    shift, and go to state 5
    BOOL      shift, and go to state 6
    PRINT     shift, and go to state 7
    IF        shift, and go to state 8
    REPEAT    shift, and go to state 9
    RETURN    shift, and go to state 10
    BREAK     shift, and go to state 11
    CONTINUE  shift, and go to state 12
    RBRACE    shift, and go to state 63

    statement    go to state 13
    declaration  go to state 14
    type         go to state 15
    print_stmt   go to state 16
    if_stmt      go to state 17
    repeat_stmt  go to state 18
    return_stmt  go to state 19


State 62

   17 if_stmt: IF LPAREN expression RPAREN block ELSE • block
   20 block: • LBRACE program RBRACE

    LBRACE  shift, and go to state 58

    block  go to state 64


State 63

   20 block: LBRACE program RBRACE •

    $default  reduce using rule 20 (block)


State 64

   17 if_stmt: IF LPAREN expression RPAREN block ELSE block •

    $default  reduce using rule 17 (if_stmt)
